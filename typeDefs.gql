type User {
  id: ID!
  createdAt: String!
  updatedAt: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phone: String!
  ownedOffices: [Office!]!
  location: Location
  bookings: [Booking!]!
  paymentAccount: [PaymentAccount!]!
  sentMessages: [Message!]!
  receivedMessages: [Message!]!
  notifications: [Notification!]!
  avatar: String!
  userType: String
}

type Office {
  id: ID!
  title: String!
  category: String!
  description: String!
  size: Int!
  numSeats: Int!
  reviews: [Review!]!
  amenities: [String!]!
  host: User!
  pricing: Pricing!
  location: Location!
  views: Views!
  policies: Policies
  officeRules: OfficeRules
  bookings: [Booking!]!
  pictures: [String!]!
  popularity: Int!
  availableSchedule: [AvailableSchedule!]!,
  tags: [String!]!
}

type Pricing {
  id: ID!
  office: Office!
  smartPricing: Boolean!
  basePrice: Int!
  minPrice: Int!
  maxPrice: Int!
}

type Policies {
  id: ID!
  govIssuedId: Boolean!
  minUsingTime: Int!
  additionalPolicies: String
}

type OfficeRules {
  id: ID!
  smokingAllowed: Boolean!
  partiesAndEventsAllowed: Boolean!
  additionalRules: String
}

type Views {
  id: ID!
  lastWeek: Int!
  office: Office!
}

type Location {
  id: ID!
  lat: Float!
  lng: Float!
  neighbourHood: Neighbourhood
  address: String!
  directions: String
}

type Neighbourhood {
  id: ID!
  locations: [Location!]!
  name: String!
  placePreview: [String]
  city: City!
  popularity: Int!
}

type City {
  id: ID!
  name: String!
  neighbourhoods: [Neighbourhood!]!
}

type Amenities {
  id: ID!
  office: Office!
  wifi: Boolean!
  tv: Boolean!
  airConditioning: Boolean!
  projector: Boolean!
  whiteBoard: Boolean!
}

type Review {
  id: ID!
  createdAt: String!
  text: String!
  stars: Int!
  accuracy: Int!
  location: Int!
  checkIn: Int!
  cleanliness: Int!
  office: Office!
}

type AvailableSchedule {
  id: ID!
  availableDate: String!
  availableHour: [Slot!]!
}
type Slot {
  start: String!
  end: String!
}
type BookedSchedule {
  id: ID!
  booking: Booking!
  bookedDate: String!
  bookedHour: Slot!
}

type Booking {
  id: ID!
  createdAt: String!
  bookee: User!
  office: Office!
  bookedSchedules: [BookedSchedule!]!
  payment: Payment
}

type Payment {
  id: ID!
  createdAt: String!
  serviceFee: Float!
  officePrice: Float!
  totalPrice: Float!
  booking: Booking!
  paymentMethod: PaymentAccount!
}

type PaymentAccount {
  id: ID!
  createdAt: String!
  type: PAYMENT_PROVIDER
  user: User!
  payments: [Payment!]!
  paypal: PaypalInformation
  creditcard: CreditCardInformation
}

type PaypalInformation {
  id: ID!
  createdAt: String!
  email: String!
  paymentAccount: PaymentAccount!
}

type CreditCardInformation {
  id: ID!
  createdAt: String!
  cardNumber: String!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  securityCode: String!
  firstName: String!
  lastName: String!
  postalCode: String!
  country: String!
  paymentAccount: PaymentAccount
}

type Message {
  id: ID!
  createdAt: String!
  from: User!
  to: User!
  deliveredAt: String!
  readAt: String!
}

type Notification {
  id: ID!
  createdAt: String!
  type: NOTIFICATION_TYPE
  user: User!
  link: String!
  readDate: String!
}

enum CURRENCY {
  EUR
  JPY
  USD
  VND
}

enum OFFICE_TYPES {
  MEETING
  TEACHING
  TALKSHOW
}

enum PAYMENT_PROVIDER {
  PAYPAL
  CREDIT_CARD
}

enum NOTIFICATION_TYPE {
  OFFER
  INSTANT_BOOK
  RESPONSIVENESS
  HOUSE_RULES
}

type Query {
  me: User!
  getCurrentUser: User
  searchLocation(address: String!, lat: Int!, lng: Int!): [Location!]!
}

type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  loginGoogle(token: String!): AuthPayload!
  signinUser(token: String!, type: String!): Token!
  updateProfile(
    firstName: String!
    lastName: String!
    email: String!
    phone: String
  ): User!
  createList(
    city: String!
    title: String!
    category: String!
    address: String!
    description: String!
    phone: String!
    website: String
    email: String
    amenities: [String!]!
    numSeats: Int!
    location: LocationInput!
    tags: [String!]!
    pricing: PriceInput!
    officeRules: RuleInput!
    schedule: [AvailableDays!]!
    pictures: [String!]!
  ): Office!
}
input PriceInput {
  basePrice: Int!
}
input RuleInput {
  smokingAllowed: Boolean! partiesAndEventsAllowed:Boolean! additionalRules:String
}
input LocationInput{
  lat: Float! lng:Float! address:String!
}
input AvailableDays {
  name: String!
  availableHour: [SlotInput!]
}
input SlotInput {
  start: String!
  end: String!
}
type Token {
  token: String!
}
type AuthPayload {
  token: String!
  user: User!
}
