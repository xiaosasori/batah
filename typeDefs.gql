type User {
  id: ID!
  joinDate: String!
  updatedAt: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phone: String
  ownedOffices: [Office!]!
  location: Location
  bookings: [Booking!]!
  paymentAccount: [PaymentAccount!]!
  sentMessages: [Message!]!
  receivedMessages: [Message!]!
  notifications: [Notification!]!
  avatar: String!
  userType: String
  identity: [String!]
}

type Office {
  id: ID!
  title: String!
  address: String!
  category: String!
  shortDescription: String!
  description: String!
  size: Int!
  phone: String
  website: String
  email: String
  numSeats: Int!
  reviews: [Review!]
  amenities: [String!]!
  host: User!
  pricing: Pricing!
  location: Location!
  views: Views!
  policies: Policies
  officeRules: OfficeRules
  bookings: [Booking!]!
  pictures: [String!]!
  popularity: Int!
  tags: [String!]!
}

type Pricing {
  id: ID!
  office: Office!
  smartPricing: Boolean!
  basePrice: Int!
  minPrice: Int!
  maxPrice: Int!
}

type Policies {
  id: ID!
  govIssuedId: Boolean!
  minUsingTime: Int!
  additionalPolicies: String
}

type OfficeRules {
  id: ID!
  smokingAllowed: Boolean!
  partiesAndEventsAllowed: Boolean!
  additionalRules: String
}

type Views {
  id: ID!
  lastWeek: Int!
  office: Office!
}

type Location {
  id: ID!
  lat: Float!
  lng: Float!
  neighbourHood: Neighbourhood
  address: String!
  directions: String
}

type Neighbourhood {
  id: ID!
  locations: [Location!]!
  name: String!
  placePreview: [String]
  city: City!
  popularity: Int!
}

type City {
  id: ID!
  name: String!
  neighbourhoods: [Neighbourhood!]!
}

type Review {
  id: ID!
  createdAt: String!
  text: String!
  stars: Float!
  cleanliness: Int!
  accurracy: Int!
  location: Int!
  checkIn: Int!
  office: Office!
  user: User!
}

type AvailableSchedule {
  id: ID!
  office: ID!
  date: String!
  slots: [Int!]!
}

type BookedSchedule {
  id: ID!
  office: ID!
  date: String!
  slots: [Int!]!
}

type Booking {
  id: ID!
  createdAt: String!
  bookee: User!
  office: Office!
  bookedSchedules: [BookedSchedule!]!
  payment: Payment
}

type Payment {
  id: ID!
  createdAt: String!
  serviceFee: Float!
  officePrice: Float!
  totalPrice: Float!
  paymentMethod: PaymentAccount!
}

type PaymentAccount {
  id: ID!
  createdAt: String!
  type: String! #PAYMENT_PROVIDER
  paypal: PaypalInformation
  creditcard: CreditCardInformation
}

type PaypalInformation {
  id: ID!
  createdAt: String!
  email: String!
}

type CreditCardInformation {
  id: ID!
  createdAt: String!
  cardNumber: String!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  securityCode: String!
  fullName: String!
  country: String!
}

type Message {
  id: ID!
  createdAt: String!
  from: User!
  to: User!
  deliveredAt: String!
  readAt: String!
}

type Notification {
  id: ID!
  createdAt: String!
  type: NOTIFICATION_TYPE
  user: User!
  link: String!
  readDate: String!
}

enum CURRENCY {
  EUR
  JPY
  USD
  VND
}

enum OFFICE_TYPES {
  MEETING
  TEACHING
  TALKSHOW
}

enum PAYMENT_PROVIDER {
  PAYPAL
  CREDIT_CARD
}

enum NOTIFICATION_TYPE {
  OFFER
  INSTANT_BOOK
  RESPONSIVENESS
  HOUSE_RULES
}

type Query {
  me: User!
  getCurrentUser: User
  searchLocation(address: String!, lat: Int!, lng: Int!): [Location!]
  searchOffice(searchTerm: String, area: AreaInput, category: String!): [Office!]
  getOffices: [Office!] 
  getOffice(id: String!): Office!
  searchOfficeByFilter(id: [ID!]!, minSize: Int, maxSize: Int, minNumSeats: Int, maxNumSeats: Int, minPrice: Int, maxPice: Int, amenities: [String!]): [Office!]
  getAvailableSchedule(office: ID!, startDate: String, endDate: String): [AvailableSchedule!]
}

input AreaInput{
  ga: BoundInput
  ma: BoundInput
}
input BoundInput{
  from: Float
  to: Float
}
type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  loginGoogle(token: String!): AuthPayload!
  signinUser(token: String!, type: String!): Token!
  updateProfile(
    firstName: String!
    lastName: String!
    email: String!
    phone: String
    avatar: String
    identity: [String!]
  ): User!
  createList(
    city: String!
    size: Int!,
    title: String!
    category: String!
    address: String!
    description: String!
    shortDescription: String!
    phone: String!
    website: String
    email: String
    amenities: [String!]!
    numSeats: Int!
    location: LocationInput!
    tags: [String!]!
    pricing: PriceInput!
    officeRules: RuleInput!
    schedule: [AvailableDays!]!
    pictures: [String!]!
  ): Office!
  createReview(text: String!
    cleanliness: Int!
    accurracy: Int!
    location: Int!
    checkIn: Int!
    office: String!
    user: String!): Review!
  createBooking(
    bookedSchedules: BookedScheduleInput!
  ): Booking!
  createBookedSchedule(
    office: ID!
    date: String!
    slots: [Int!]!
  ): BookedSchedule!
  createAvailableSchedule(
    office: ID!
    date: String!
    slots: [Int!]!
  ): AvailableSchedule!
  createPayment(
    serviceFee: Float!
    officePrice: Float!
    numHours: Int!
    paymentMethod: ID!
  ): Payment!
  createPaymentAccount(
    type: String!
    paypal: ID
    creditcard: ID
  ): PaymentAccount!
  createPaypalInformation(
    email: String!
  ): PaypalInformation!
  createCreditCardInformation(
    cardNumber: String!
    expiresOnMonth: Int!
    expiresOnYear: Int!
    securityCode: String!
    fullName: String!
    country: String!
  ): CreditCardInformation!
}
input BookedScheduleInput {
  office: ID!
    date: String!
    slots: [Int!]!
}
input ScheduleInput {
    date: String!
    slots: [Int!]!
}
input LocationInput {
  lat: Float
  lng: Float
  address: String
}

input PriceInput {
  basePrice: Int!
}
input RuleInput {
  smokingAllowed: Boolean! partiesAndEventsAllowed:Boolean! additionalRules:String
}
input AvailableDays {
  date: String!
  slots: [Int!]!
}
type Token {
  token: String!
}
type AuthPayload {
  token: String!
  user: User!
}
